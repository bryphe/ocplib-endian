(jbuild_version 1)

(rule
 ((targets (endianString.mli))
  (deps    (endianString.cppo.mli))
  (action  (run ${bin:cppo} -V OCAML:${ocaml_version} ${<} -o ${@}))))

(rule
 ((targets (endianString.ml))
  (deps    (endianString.cppo.ml common.ml common_401.ml common_400.ml))
  (action  (run ${bin:cppo} -V OCAML:${ocaml_version} ${<} -o ${@}))))

(rule
 ((targets (endianBytes.mli))
  (deps    (endianBytes.cppo.mli))
  (action  (run ${bin:cppo} -V OCAML:${ocaml_version} ${<} -o ${@}))))

(rule
 ((targets (endianBytes.ml))
  (deps    (endianBytes.cppo.ml common.ml common_401.ml common_400.ml))
  (action  (run ${bin:cppo} -V OCAML:${ocaml_version} ${<} -o ${@}))))

(rule
 ((targets (endianBigstring.mli))
  (deps    (endianBigstring.cppo.mli))
  (action  (run ${bin:cppo} -V OCAML:${ocaml_version} ${<} -o ${@}))))

(rule
 ((targets (endianBigstring.ml))
  (deps    (endianBigstring.cppo.ml common.ml common_401.ml common_400.ml))
  (action  (run ${bin:cppo} -V OCAML:${ocaml_version} ${<} -o ${@}))))

(rule
 ((targets (common_400.ml))
  (deps    (common_400.cppo.ml
            be_ocaml_400.ml le_ocaml_400.ml ne_ocaml_400.ml common_float.ml))
  (action  (run ${bin:cppo} -V OCAML:${ocaml_version} ${<} -o ${@}))))

(rule
 ((targets (common_401.ml))
  (deps    (common_401.cppo.ml
            be_ocaml_401.ml le_ocaml_401.ml ne_ocaml_401.ml common_float.ml))
  (action  (run ${bin:cppo} -V OCAML:${ocaml_version} ${<} -o ${@}))))

(library
 ((name        ocplib_endian)
  (public_name ocplib-endian)
  (synopsis
    "Optimised functions to read and write int16/32/64 from strings and bytes")
  (wrapped     false)
  (flags       (-w -52))
  (modules     (endianString endianBytes))
  (libraries   (bytes))))

(library
 ((name        ocplib_endian_bigstring)
  (public_name ocplib-endian.bigstring)
  (flags (-w -32))
  (synopsis
    "Optimised functions to read and write int16/32/64 from bigarrays")
  (wrapped     false)
  (modules     (endianBigstring))
  (libraries (ocplib_endian bigarray bytes))))

(install
  ((section lib)
   (files   (endianString.ml endianBytes.ml
             (endianBigstring.ml as bigstring/endianBigstring.ml)))
   (package ocplib-endian)))
